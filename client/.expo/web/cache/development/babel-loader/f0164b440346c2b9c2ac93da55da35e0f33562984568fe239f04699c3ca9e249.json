{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _excluded = [\"route\"];\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { getProducts } from \"../axios/accessServer\";\nimport seafoodFreezer from \"../JSON/seafoodFreezerProduct.json\";\nimport meetFreezer from \"../JSON/meetFreezerProducts.json\";\nimport vegetableFridge from \"../JSON/vegetableFridgeProducts.json\";\nimport chickenFridge from \"../JSON/chickenFridgeProducts.json\";\nimport pastaCabinet from \"../JSON/pastaCabinetProducts.json\";\nimport Inventory from \"../JSON/inventory.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backgroundColorCard = function () {\n  var _ref = _asyncToGenerator(function* (card) {\n    var response = yield getProducts(card.Inventoryid);\n    console.log(card);\n    console.log(response.data);\n    var color;\n    var typeFood = card.UnitName;\n    console.log(card.AmountPercent);\n    if (card.AmountPercent <= 30) {\n      color = '#C41C21';\n    }\n    if (card.AmountPercent > 30 && card.AmountPercent <= 70) {\n      color = '#EF9300';\n    }\n    if (card.AmountPercent > 70) {\n      color = '#28AA29';\n    }\n    return color;\n  });\n  return function backgroundColorCard(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar checkGoComponent = function checkGoComponent(percent, unit) {\n  var component;\n  if (percent <= 30) {\n    component = \"StorageUnitLowStock\";\n  } else if (percent > 30 && percent <= 70) {\n    component = \"StorageUnitLimitedStock\";\n  } else if (percent > 70) {\n    component = \"StorageUnitSufficientStock\";\n  }\n  return component;\n};\nvar radiusCard = function radiusCard(percent) {\n  var radius = 0;\n  if (percent >= 98) {\n    radius = 30;\n  }\n  return radius;\n};\nvar InventoryCard = function InventoryCard(_ref2) {\n  var route = _ref2.route,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: [styles.cardContainer],\n    children: [_jsx(View, {\n      style: [styles.color, {\n        backgroundColor: backgroundColorCard(props.card)\n      }, {\n        width: props.card.inventoryLevelPercent + '%'\n      }, {\n        borderTopRightRadius: radiusCard(props.card.AmountPercent)\n      }, {\n        borderBottomRightRadius: radiusCard(props.card.AmountPercent)\n      }]\n    }), _jsx(Text, {\n      style: styles.imageStyle,\n      children: props.card.Emoji\n    }), _jsxs(View, {\n      style: styles.textStyle,\n      children: [_jsx(Text, {\n        style: styles.textStyle1,\n        children: props.card.UnitName\n      }), _jsx(Text, {\n        style: styles.textStyle2,\n        children: props.card.title2\n      }), _jsx(Text, {\n        style: styles.textStyle3,\n        children: props.card.title3\n      })]\n    }), _jsx(AntDesign, {\n      style: styles.iconStyle,\n      name: \"arrowright\",\n      size: 24,\n      color: \"black\",\n      onPress: function onPress() {\n        return navigation.navigate(checkGoComponent(props.card.AmountPercent, props.card.UnitType), {\n          typeFood: props.card.UnitName,\n          unit: props.card.UnitType,\n          Temperature: props.card.temperature,\n          emoji: props.card.Emoji\n        });\n      }\n    })]\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: '#FFFFFF',\n    width: deviceWidth - 30,\n    height: 90,\n    borderRadius: 30,\n    shadowColor: '#00000029',\n    shadowRadius: 30,\n    flexDirection: 'row',\n    top: '30%'\n  },\n  color: {\n    opacity: 0.26,\n    borderTopLeftRadius: 30,\n    borderBottomLeftRadius: 30\n  },\n  imageStyle: {\n    position: 'absolute',\n    left: '8%',\n    top: '25%',\n    flex: 1,\n    fontSize: 38\n  },\n  textStyle: {\n    flex: 2,\n    position: 'absolute',\n    left: '30%',\n    top: '20%'\n  },\n  textStyle1: {\n    fontFamily: 'GeneralSans',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  textStyle2: {\n    fontFamily: 'GeneralSans-Semibold',\n    fontSize: 14,\n    color: '#A2142C',\n    fontWeight: 'bold'\n  },\n  textStyle3: {\n    fontFamily: 'GeneralSans-Medium',\n    fontSize: 11,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  iconStyle: {\n    flex: 3,\n    position: 'absolute',\n    left: '90%',\n    top: '30%'\n  }\n});\nexport default InventoryCard;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Dimensions","Image","AntDesign","useNavigation","getProducts","seafoodFreezer","meetFreezer","vegetableFridge","chickenFridge","pastaCabinet","Inventory","jsx","_jsx","jsxs","_jsxs","backgroundColorCard","_ref","_asyncToGenerator","card","response","Inventoryid","console","log","data","color","typeFood","UnitName","AmountPercent","_x","apply","arguments","checkGoComponent","percent","unit","component","radiusCard","radius","InventoryCard","_ref2","route","props","_objectWithoutProperties","_excluded","navigation","style","styles","cardContainer","children","backgroundColor","width","inventoryLevelPercent","borderTopRightRadius","borderBottomRightRadius","imageStyle","Emoji","textStyle","textStyle1","textStyle2","title2","textStyle3","title3","iconStyle","name","size","onPress","navigate","UnitType","Temperature","temperature","emoji","deviceWidth","Math","round","get","create","height","borderRadius","shadowColor","shadowRadius","flexDirection","top","opacity","borderTopLeftRadius","borderBottomLeftRadius","position","left","flex","fontSize","fontFamily","fontWeight"],"sources":["C:/company/masooda/client/components/InventoryCard.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text ,Dimensions, Image} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {getProducts} from '../axios/accessServer';//Calling a function from another file\r\n\r\n//-------------------------------------------\r\nimport seafoodFreezer from '../JSON/seafoodFreezerProduct.json';\r\nimport meetFreezer from '../JSON/meetFreezerProducts.json';\r\nimport vegetableFridge from '../JSON/vegetableFridgeProducts.json';\r\nimport chickenFridge from '../JSON/chickenFridgeProducts.json';\r\nimport pastaCabinet from '../JSON/pastaCabinetProducts.json';\r\nimport Inventory from '../JSON/inventory.json'\r\n//================================================\r\nvar backgroundColorCard = async function  (card) {\r\n    let response = await getProducts(card.Inventoryid)\r\n    console.log(card);\r\n    console.log(response.data);\r\n\r\n\r\n\r\n    let color;\r\n    //inventoryLevelPercent\r\n    let typeFood = card.UnitName;\r\n    /*let json;\r\n    if (typeFood === 'Seafood Freezer') {\r\n        json = seafoodFreezer;\r\n    }\r\n\r\n    else if (typeFood === 'Meat Freezer') {\r\n        json = meetFreezer;\r\n    }\r\n\r\n    else if (typeFood === 'Vegetable Fridge') {\r\n        json = vegetableFridge;\r\n    }\r\n\r\n    else if (typeFood === 'Chicken Fridge') {\r\n        json = chickenFridge;\r\n    }\r\n\r\n    else if (typeFood === 'Pasta Cabinet') {\r\n        json = pastaCabinet;\r\n    }///////////////////////////////////*/\r\n    /*let sumMax = 0;\r\n    let sumMin = 0;\r\n    for (let i = 0; i < json.products.length; i++)\r\n    {\r\n        let weight = json.products[i].weight;\r\n        let min = weight.split(\"/\", 1);\r\n\r\n        let max = weight.slice(weight.indexOf('/') + 1, weight.lastIndexOf(' '));\r\n        max = parseInt(max);\r\n        min = parseInt(min);\r\n        sumMax += max;\r\n        sumMin += min;\r\n    }\r\n\r\n\r\n    let percent = sumMin / sumMax * 100;\r\n\r\n\r\n    for (let i = 0; i < Inventory.data.length; i++) \r\n    {\r\n        if (Inventory.data[i].title1 === typeFood)\r\n        {\r\n            Inventory.data[i].inventoryLevelPercent = percent;\r\n        }\r\n    }*/\r\n\r\n    console.log(card.AmountPercent);\r\n    if (card.AmountPercent <= 30) {\r\n        color = '#C41C21';\r\n    }\r\n    if (card.AmountPercent > 30 && card.AmountPercent <= 70) {\r\n        color = '#EF9300';\r\n    }\r\n    if (card.AmountPercent > 70) {\r\n        color = '#28AA29';\r\n    }\r\n\r\n    return color;\r\n}\r\n\r\n//================================================\r\n//A function that returns the component to which we will need to render\r\nvar checkGoComponent = function (percent, unit) {\r\n    let component;\r\n    \r\n    if (percent <= 30) {\r\n        component = \"StorageUnitLowStock\";//מלאי נמוך\r\n    }\r\n    else if (percent > 30 && percent <= 70) {\r\n        component = \"StorageUnitLimitedStock\";//מלאי מוגבל\r\n    }\r\n    else if (percent > 70) {\r\n        component = \"StorageUnitSufficientStock\";//מלאי מספיק\r\n    }\r\n    return component;\r\n}\r\n//=================================================\r\nconst radiusCard = (percent) =>{\r\n    let radius = 0;\r\n    if(percent >= 98)\r\n    {\r\n        radius = 30\r\n    }\r\n    return radius;\r\n}\r\n//================================================\r\nconst InventoryCard = ({ route, ...props })  =>{\r\n    \r\n    const navigation = useNavigation();\r\n\r\n    return(\r\n        <View style={[styles.cardContainer]} >\r\n            <View style={[styles.color, { backgroundColor: backgroundColorCard(props.card) }, \r\n                                         { width: props.card.inventoryLevelPercent + '%' }, \r\n                                         {borderTopRightRadius: radiusCard(props.card.AmountPercent)},\r\n                                         {borderBottomRightRadius: radiusCard(props.card.AmountPercent)}]}></View>\r\n\r\n            <Text style={styles.imageStyle}>{props.card.Emoji}</Text>\r\n\r\n            <View style={styles.textStyle}>\r\n                <Text style={styles.textStyle1}>{props.card.UnitName}</Text>\r\n                <Text style={styles.textStyle2}>{props.card.title2}</Text>\r\n                <Text style={styles.textStyle3}>{props.card.title3}</Text>\r\n            </View>\r\n\r\n            <AntDesign style={styles.iconStyle} name=\"arrowright\" size={24} color=\"black\" \r\n                onPress={() =>\r\n                    navigation.navigate(checkGoComponent(props.card.AmountPercent, props.card.UnitType), { typeFood: props.card.UnitName, unit: props.card.UnitType, Temperature: props.card.temperature, emoji: props.card.Emoji })}\r\n            />\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        backgroundColor: '#FFFFFF',\r\n        width: deviceWidth - 30,\r\n        height: 90,\r\n        borderRadius: 30,\r\n        shadowColor: '#00000029',\r\n        shadowRadius: 30,\r\n        flexDirection: 'row',\r\n        top: '30%',\r\n    },\r\n    color:{\r\n        opacity: 0.26,\r\n        borderTopLeftRadius:30,\r\n        borderBottomLeftRadius: 30,\r\n\r\n\r\n    },\r\n    imageStyle:{\r\n        position: 'absolute',\r\n        left: '8%',\r\n        top: '25%',\r\n        flex: 1,\r\n        fontSize:38\r\n    },\r\n    textStyle:{\r\n        flex: 2,\r\n        position: 'absolute',\r\n        left: '30%',\r\n        top: '20%'\r\n    },\r\n    textStyle1:{\r\n        fontFamily: 'GeneralSans',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n    },\r\n    textStyle2: {\r\n        fontFamily: 'GeneralSans-Semibold',\r\n        fontSize: 14,\r\n        color: '#A2142C',\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    textStyle3: {\r\n        fontFamily: 'GeneralSans-Medium',\r\n        fontSize: 11,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n\r\n    },\r\n    iconStyle:{\r\n        flex: 3,\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '30%'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default InventoryCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}