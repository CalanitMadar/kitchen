{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Card from \"./InventoryCard\";\nimport { Picker } from '@react-native-picker/picker';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar cards = [{\n  id: '1',\n  picture: '',\n  title1: \"Seafood Freezer\",\n  title2: \"Low Stock\",\n  title3: \"Low on 2/3 product types\",\n  icon: '',\n  inventoryLevelPercent: 30,\n  emoji: '🦐'\n}, {\n  id: '2',\n  picture: '',\n  title1: \"Meat Freezer\",\n  title2: \"Limited stock\",\n  title3: \"Low on 1/3 product types\",\n  icon: '',\n  inventoryLevelPercent: 50,\n  emoji: '🥩'\n}, {\n  id: '3',\n  picture: '',\n  title1: \"Vegetable Fridge\",\n  title2: \"Sufficient Stock\",\n  title3: \"All product types stocked\",\n  icon: '',\n  inventoryLevelPercent: 75,\n  emoji: '🥬'\n}, {\n  id: '4',\n  picture: '',\n  title1: \"Chicken Fridge\",\n  title2: \"Limited stock\",\n  title3: \"Low on 1/3 product types\",\n  icon: '',\n  inventoryLevelPercent: 55,\n  emoji: '🍗'\n}, {\n  id: '5',\n  picture: '',\n  title1: \"Pasta Cabinet\",\n  title2: \"Sufficient Stock\",\n  title3: \"All product types stocked\",\n  icon: '',\n  inventoryLevelPercent: 100,\n  emoji: '🍝'\n}];\nvar Inventory = function Inventory(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState('Sort by' + {}),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedSort = _useState2[0],\n    setSelectedSort = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.titleStile,\n        children: \"Manage Inventory \"\n      }), _jsxs(Picker, {\n        selectedValue: selectedSort,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedSort(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Name (alphabetically)\",\n          value: \"1\"\n        }), _jsx(Picker.Item, {\n          label: \"Stock Level\",\n          value: \"2\"\n        }), _jsx(Picker.Item, {\n          label: \"Type (Cold / Pantry)\",\n          value: \"3\"\n        })]\n      })]\n    }), cards.map(function (card, key) {\n      return _jsx(View, {\n        style: styles.card,\n        children: _jsx(Card, {\n          style: styles.cardStyle,\n          card: card\n        })\n      }, card.id);\n    }), _jsx(View, {\n      style: styles.buttonStyle,\n      children: _jsx(Button, {\n        color: \"#C3001F\",\n        onPress: function onPress() {\n          return navigation.navigate('StorageUnit');\n        },\n        title: \"+ Add Storage Unit\"\n      })\n    })]\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    gap: 8\n  },\n  titleStile: {\n    fontFamily: 'General Sans, Semibold',\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  cardStyle: {},\n  buttonStyle: {\n    fontFamily: 'General Sans',\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: '110%',\n    width: deviceWidth - 150,\n    borderRadius: 15,\n    backgroundColor: '#C3001F',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Inventory;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Image","Dimensions","Card","Picker","useState","jsx","_jsx","jsxs","_jsxs","cards","id","picture","title1","title2","title3","icon","inventoryLevelPercent","emoji","Inventory","_ref","navigation","_useState","_useState2","_slicedToArray","selectedSort","setSelectedSort","style","styles","container","children","titleStile","selectedValue","onValueChange","itemValue","itemIndex","Item","label","value","map","card","key","cardStyle","buttonStyle","color","onPress","navigate","title","deviceWidth","Math","round","get","width","create","backgroundColor","alignItems","gap","fontFamily","fontSize","fontWeight","position","top","borderRadius","justifyContent"],"sources":["C:/company/masooda/myproject/components/Inventory.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text, Image, Dimensions } from 'react-native';\r\nimport Card from './InventoryCard';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useState } from 'react';\r\n//====================================================================\r\n\r\n\r\n\r\n//====================================================================\r\nconst cards = [\r\n    {\r\n        id: '1',\r\n        picture: '',\r\n        title1: \"Seafood Freezer\",\r\n        title2: \"Low Stock\",\r\n        title3: \"Low on 2/3 product types\",\r\n        icon: '',\r\n        inventoryLevelPercent: 30,\r\n        emoji:'🦐',\r\n    },\r\n    {\r\n        id: '2',\r\n        picture: '' ,\r\n        title1: \"Meat Freezer\",\r\n        title2: \"Limited stock\",\r\n        title3: \"Low on 1/3 product types\",\r\n        icon: '',\r\n        inventoryLevelPercent: 50,\r\n        emoji: '🥩',\r\n    },\r\n    {\r\n        id: '3',\r\n        picture: '',\r\n        title1: \"Vegetable Fridge\",\r\n        title2: \"Sufficient Stock\",\r\n        title3: \"All product types stocked\",\r\n        icon: '',\r\n        inventoryLevelPercent: 75,\r\n        emoji: '🥬',\r\n\r\n    },\r\n    {\r\n        id: '4',\r\n        picture: '',\r\n        title1: \"Chicken Fridge\",\r\n        title2: \"Limited stock\",\r\n        title3: \"Low on 1/3 product types\",\r\n        icon: '',\r\n        inventoryLevelPercent: 55,\r\n        emoji: '🍗',\r\n\r\n    },\r\n    {\r\n        id: '5',\r\n        picture: '',\r\n        title1: \"Pasta Cabinet\",\r\n        title2: \"Sufficient Stock\",\r\n        title3: \"All product types stocked\",\r\n        icon: '' ,\r\n        inventoryLevelPercent: 100,\r\n        emoji: '🍝',\r\n\r\n    }\r\n];\r\n//====================================================================\r\nconst Inventory = ({navigation}) => {\r\n    const [selectedSort, setSelectedSort] = useState('Sort by'+{});\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n\r\n            <View style={styles.container}>\r\n                <Text style={styles.titleStile}>Manage Inventory </Text>\r\n\r\n                <Picker\r\n                    selectedValue={selectedSort}\r\n                    onValueChange={(itemValue, itemIndex) =>\r\n                        setSelectedSort(itemValue)\r\n                    }>\r\n                    <Picker.Item label=\"Name (alphabetically)\" value=\"1\" />\r\n                    <Picker.Item label=\"Stock Level\" value=\"2\" />\r\n                    <Picker.Item label=\"Type (Cold / Pantry)\" value=\"3\" />\r\n                </Picker>\r\n            </View>\r\n\r\n            {cards.map((card, key) => {\r\n                return (\r\n                    <View key={card.id} style={styles.card}>\r\n                        <Card style={styles.cardStyle} card={card}/>\r\n\r\n                    </View>\r\n                );\r\n            })}\r\n            \r\n            <View style={styles.buttonStyle}>\r\n                <Button color=\"#C3001F\" onPress={() => \r\n                        navigation.navigate('StorageUnit')} title='+ Add Storage Unit'></Button>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        gap: 8,\r\n        //shadowColor: '#00000029',\r\n\r\n    },\r\n    titleStile:{\r\n        fontFamily: 'General Sans, Semibold',\r\n        fontSize:17,\r\n        fontWeight: 'bold',\r\n       \r\n    },\r\n    cardStyle:{\r\n    },\r\n    buttonStyle: {\r\n        fontFamily: 'General Sans',\r\n        fontWeight: 'bold',\r\n        position: 'absolute',\r\n        top: '110%',\r\n        width: deviceWidth - 150,\r\n        borderRadius: 15,\r\n        \r\n        backgroundColor: '#C3001F',\r\n        borderRadius: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nexport default Inventory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}