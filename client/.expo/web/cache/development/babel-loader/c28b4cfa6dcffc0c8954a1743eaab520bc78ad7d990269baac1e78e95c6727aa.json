{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backgroundColorCard = function backgroundColorCard(percentColor) {\n  var color;\n  if (percentColor <= 30) {\n    color = '#C41C21';\n  }\n  if (percentColor > 30 && percentColor <= 70) {\n    color = '#EF9300';\n  }\n  if (percentColor > 70) {\n    color = '#28AA29';\n  }\n  return color;\n};\nvar InventoryCard = function InventoryCard(props) {\n  return _jsxs(View, {\n    style: [styles.cardContainer, {\n      backgroundColor: backgroundColorCard(props.card.inventoryLevelPercent)\n    }, {\n      width: props.card.inventoryLevelPercent + '%'\n    }],\n    children: [_jsx(Text, {\n      style: styles.imageStyle,\n      children: props.card.emoji\n    }), _jsxs(View, {\n      style: styles.textStyle,\n      children: [_jsx(Text, {\n        style: styles.textStyle1,\n        children: props.card.title1\n      }), _jsx(Text, {\n        style: styles.textStyle2,\n        children: props.card.title2\n      }), _jsx(Text, {\n        style: styles.textStyle3,\n        children: props.card.title3\n      })]\n    }), _jsx(AntDesign, {\n      style: styles.iconStyle,\n      name: \"arrowright\",\n      size: 24,\n      color: \"black\"\n    })]\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: deviceWidth - 30,\n    height: 90,\n    borderRadius: 30,\n    shadowColor: '#00000029',\n    shadowRadius: 30,\n    flexDirection: 'row'\n  },\n  color: {\n    opacity: 0.26,\n    borderTopLeftRadius: 30,\n    borderBottomLeftRadius: 30\n  },\n  imageStyle: {\n    position: 'absolute',\n    left: '8%',\n    top: '25%',\n    flex: 1,\n    fontSize: 38\n  },\n  textStyle: {\n    flex: 2,\n    position: 'absolute',\n    left: '30%',\n    top: '20%'\n  },\n  textStyle1: {\n    fontFamily: 'GeneralSans',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  textStyle2: {\n    fontFamily: 'GeneralSans-Semibold',\n    fontSize: 14,\n    color: '#A2142C',\n    fontWeight: 'bold'\n  },\n  textStyle3: {\n    fontFamily: 'GeneralSans-Medium',\n    fontSize: 11,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  iconStyle: {\n    flex: 3,\n    position: 'absolute',\n    left: '90%',\n    top: '30%'\n  }\n});\nexport default InventoryCard;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Dimensions","Image","AntDesign","jsx","_jsx","jsxs","_jsxs","backgroundColorCard","percentColor","color","InventoryCard","props","style","styles","cardContainer","backgroundColor","card","inventoryLevelPercent","width","children","imageStyle","emoji","textStyle","textStyle1","title1","textStyle2","title2","textStyle3","title3","iconStyle","name","size","deviceWidth","Math","round","get","create","height","borderRadius","shadowColor","shadowRadius","flexDirection","opacity","borderTopLeftRadius","borderBottomLeftRadius","position","left","top","flex","fontSize","fontFamily","fontWeight"],"sources":["C:/company/masooda/myproject/components/InventoryCard.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text ,Dimensions, Image} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n//================================================\r\nvar backgroundColorCard = function (percentColor) {\r\n    let color;\r\n    if (percentColor <= 30) {\r\n        color = '#C41C21';\r\n    }\r\n    if (percentColor > 30 && percentColor <= 70) {\r\n        color = '#EF9300';\r\n    }\r\n    if (percentColor > 70) {\r\n        color = '#28AA29';\r\n    }\r\n\r\n    return color;\r\n}\r\n//================================================\r\nconst InventoryCard = props =>{\r\n    return(\r\n        <View style={[styles.cardContainer, { backgroundColor: backgroundColorCard(props.card.inventoryLevelPercent) }, { width: props.card.inventoryLevelPercent + '%' }]}>\r\n\r\n            <Text style={styles.imageStyle}>{props.card.emoji}</Text>\r\n\r\n            <View style={styles.textStyle}>\r\n                <Text style={styles.textStyle1}>{props.card.title1}</Text>\r\n                <Text style={styles.textStyle2}>{props.card.title2}</Text>\r\n                <Text style={styles.textStyle3}>{props.card.title3}</Text>\r\n            </View>\r\n\r\n            <AntDesign style={styles.iconStyle} name=\"arrowright\" size={24} color=\"black\" />\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        width: deviceWidth - 30,\r\n        height: 90,\r\n        borderRadius: 30,\r\n        shadowColor: '#00000029',\r\n        shadowRadius: 30,\r\n        flexDirection: 'row',\r\n    },\r\n    color:{\r\n        opacity: 0.26,\r\n        borderTopLeftRadius:30,\r\n        borderBottomLeftRadius: 30,\r\n\r\n\r\n    },\r\n    imageStyle:{\r\n        position: 'absolute',\r\n        left: '8%',\r\n        top: '25%',\r\n        flex: 1,\r\n        fontSize:38\r\n    },\r\n    textStyle:{\r\n        flex: 2,\r\n        position: 'absolute',\r\n        left: '30%',\r\n        top: '20%'\r\n    },\r\n    textStyle1:{\r\n        fontFamily: 'GeneralSans',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n    },\r\n    textStyle2: {\r\n        fontFamily: 'GeneralSans-Semibold',\r\n        fontSize: 14,\r\n        color: '#A2142C',\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    textStyle3: {\r\n        fontFamily: 'GeneralSans-Medium',\r\n        fontSize: 11,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n\r\n    },\r\n    iconStyle:{\r\n        flex: 3,\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '30%'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default InventoryCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}