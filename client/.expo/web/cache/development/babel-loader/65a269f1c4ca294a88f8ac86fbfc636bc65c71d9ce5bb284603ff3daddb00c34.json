{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backgroundColorCard = function backgroundColorCard(percentColor) {\n  var color;\n  if (percentColor <= 30) {\n    color = '#C41C21';\n  }\n  if (percentColor > 30 && percentColor <= 70) {\n    color = '#EF9300';\n  }\n  if (percentColor > 70) {\n    color = '#28AA29';\n  }\n  return color;\n};\nvar checkGoComponent = function checkGoComponent(percent, unit) {\n  var component;\n  if (unit === 'pantry') {\n    component = 'StorageUnitPantry';\n  }\n  if (unit === 'cold') {\n    if (percent <= 30) {\n      component = 'StorageUnitLowStock';\n    }\n    if (percent > 30 && percent <= 70) {\n      component = 'StorageUnitLimitedStock';\n    }\n    if (percent > 70) {\n      component = 'StorageUnitSufficientStock';\n    }\n  }\n  return component;\n};\nvar InventoryCard = function InventoryCard(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.cardContainer,\n    children: [_jsx(View, {\n      style: [styles.color, {\n        backgroundColor: backgroundColorCard(props.card.inventoryLevelPercent)\n      }, {\n        width: props.card.inventoryLevelPercent + '%'\n      }]\n    }), _jsx(Text, {\n      style: styles.imageStyle,\n      children: props.card.emoji\n    }), _jsxs(View, {\n      style: styles.textStyle,\n      children: [_jsx(Text, {\n        style: styles.textStyle1,\n        children: props.card.title1\n      }), _jsx(Text, {\n        style: styles.textStyle2,\n        children: props.card.title2\n      }), _jsx(Text, {\n        style: styles.textStyle3,\n        children: props.card.title3\n      })]\n    }), _jsx(AntDesign, {\n      style: styles.iconStyle,\n      name: \"arrowright\",\n      size: 24,\n      color: \"black\",\n      onPress: function onPress() {\n        return navigation.navigate(checkGoComponent(props.card.inventoryLevelPercent, props.card.unit));\n      }\n    })]\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: deviceWidth - 30,\n    height: 90,\n    borderRadius: 30,\n    shadowColor: '#00000029',\n    shadowRadius: 30,\n    flexDirection: 'row'\n  },\n  color: {\n    opacity: 0.26,\n    borderTopLeftRadius: 30,\n    borderBottomLeftRadius: 30\n  },\n  imageStyle: {\n    position: 'absolute',\n    left: '8%',\n    top: '25%',\n    flex: 1,\n    fontSize: 38\n  },\n  textStyle: {\n    flex: 2,\n    position: 'absolute',\n    left: '30%',\n    top: '20%'\n  },\n  textStyle1: {\n    fontFamily: 'GeneralSans',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  textStyle2: {\n    fontFamily: 'GeneralSans-Semibold',\n    fontSize: 14,\n    color: '#A2142C',\n    fontWeight: 'bold'\n  },\n  textStyle3: {\n    fontFamily: 'GeneralSans-Medium',\n    fontSize: 11,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  iconStyle: {\n    flex: 3,\n    position: 'absolute',\n    left: '90%',\n    top: '30%'\n  }\n});\nexport default InventoryCard;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Dimensions","Image","AntDesign","jsx","_jsx","jsxs","_jsxs","backgroundColorCard","percentColor","color","checkGoComponent","percent","unit","component","InventoryCard","_ref","route","navigation","style","styles","cardContainer","children","backgroundColor","props","card","inventoryLevelPercent","width","imageStyle","emoji","textStyle","textStyle1","title1","textStyle2","title2","textStyle3","title3","iconStyle","name","size","onPress","navigate","deviceWidth","Math","round","get","create","height","borderRadius","shadowColor","shadowRadius","flexDirection","opacity","borderTopLeftRadius","borderBottomLeftRadius","position","left","top","flex","fontSize","fontFamily","fontWeight"],"sources":["C:/company/masooda/myproject/components/InventoryCard.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text ,Dimensions, Image} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n//================================================\r\nvar backgroundColorCard = function (percentColor) {\r\n    let color;\r\n    if (percentColor <= 30) {\r\n        color = '#C41C21';\r\n    }\r\n    if (percentColor > 30 && percentColor <= 70) {\r\n        color = '#EF9300';\r\n    }\r\n    if (percentColor > 70) {\r\n        color = '#28AA29';\r\n    }\r\n\r\n    return color;\r\n}\r\n//================================================\r\nvar checkGoComponent = function (percent, unit) {\r\n    let component;\r\n    if (unit === 'pantry') {\r\n        component = 'StorageUnitPantry';//מזווה\r\n    }\r\n    //-----------------\r\n    if (unit === 'cold') {\r\n        if (percent <= 30) {\r\n            component = 'StorageUnitLowStock';//מלאי נמוך\r\n        }\r\n        if (percent > 30 && percent <= 70) {\r\n            component = 'StorageUnitLimitedStock';//מלאי מוגבל\r\n        }\r\n        if (percent > 70) {\r\n            component = 'StorageUnitSufficientStock';//מלאי מספיק\r\n        }\r\n    }\r\n    \r\n\r\n    return component;\r\n}\r\n//================================================\r\nconst InventoryCard = ({ route, navigation })  =>{\r\n    return(\r\n        <View style={styles.cardContainer} >\r\n            <View style={[styles.color, { backgroundColor: backgroundColorCard(props.card.inventoryLevelPercent) }, { width: props.card.inventoryLevelPercent + '%' }]}></View>\r\n\r\n            <Text style={styles.imageStyle}>{props.card.emoji}</Text>\r\n\r\n            <View style={styles.textStyle}>\r\n                <Text style={styles.textStyle1}>{props.card.title1}</Text>\r\n                <Text style={styles.textStyle2}>{props.card.title2}</Text>\r\n                <Text style={styles.textStyle3}>{props.card.title3}</Text>\r\n            </View>\r\n\r\n            <AntDesign style={styles.iconStyle} name=\"arrowright\" size={24} color=\"black\" \r\n                onPress={() =>\r\n                    navigation.navigate(checkGoComponent(props.card.inventoryLevelPercent, props.card.unit))}\r\n            />\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        width: deviceWidth - 30,\r\n        height: 90,\r\n        borderRadius: 30,\r\n        shadowColor: '#00000029',\r\n        shadowRadius: 30,\r\n        flexDirection: 'row',\r\n    },\r\n    color:{\r\n        opacity: 0.26,\r\n        borderTopLeftRadius:30,\r\n        borderBottomLeftRadius: 30,\r\n\r\n\r\n    },\r\n    imageStyle:{\r\n        position: 'absolute',\r\n        left: '8%',\r\n        top: '25%',\r\n        flex: 1,\r\n        fontSize:38\r\n    },\r\n    textStyle:{\r\n        flex: 2,\r\n        position: 'absolute',\r\n        left: '30%',\r\n        top: '20%'\r\n    },\r\n    textStyle1:{\r\n        fontFamily: 'GeneralSans',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n    },\r\n    textStyle2: {\r\n        fontFamily: 'GeneralSans-Semibold',\r\n        fontSize: 14,\r\n        color: '#A2142C',\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    textStyle3: {\r\n        fontFamily: 'GeneralSans-Medium',\r\n        fontSize: 11,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n\r\n    },\r\n    iconStyle:{\r\n        flex: 3,\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '30%'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default InventoryCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}