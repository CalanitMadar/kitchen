{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useState, useEffect } from 'react';\nimport { getEmojis } from \"../axios/accessServer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EmojiComp = function EmojiComp(_ref) {\n  var CallbackFunction = _ref.CallbackFunction,\n    lastEmoji = _ref.lastEmoji;\n  var _useState = useState(lastEmoji),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentEmoji = _useState2[0],\n    setCurrentEmoji = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    emojiList = _useState4[0],\n    setEmojiList = _useState4[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield getEmojis();\n          var x = response.data;\n          setEmojiList(x);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [CallbackFunction(currentEmoji), _jsx(Text, {\n      style: styles.title,\n      children: \"Choose a new emoji\"\n    }), _jsx(FlatList, {\n      data: emojiList,\n      numColumns: 8,\n      keyExtractor: function keyExtractor(item, index) {\n        return item.emojiId.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(View, {\n          style: styles.emojiContainer,\n          children: _jsx(Text, {\n            style: styles.emoji,\n            onPress: function onPress() {\n              setCurrentEmoji(item.emoji);\n            },\n            children: item.emoji\n          })\n        });\n      }\n    })]\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar deviceHeight = Math.round(Dimensions.get('window').height);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFFFFF',\n    width: deviceWidth,\n    borderRadius: 15,\n    shadowColor: '#0000009D',\n    shadowRadius: 30,\n    flexDirection: 'column',\n    flex: 1,\n    maxWidth: 600\n  },\n  title: {\n    fontFamily: 'GeneralSans-Semibold',\n    fontWeight: 'bold',\n    position: 'relative',\n    width: deviceWidth,\n    left: deviceWidth / 4\n  },\n  emojiContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  emoji: {\n    fontSize: 20,\n    marginHorizontal: 10\n  }\n});\nexport default EmojiComp;","map":{"version":3,"names":["React","StyleSheet","View","Text","Dimensions","FlatList","useState","useEffect","getEmojis","jsx","_jsx","jsxs","_jsxs","EmojiComp","_ref","CallbackFunction","lastEmoji","_useState","_useState2","_slicedToArray","currentEmoji","setCurrentEmoji","_useState3","_useState4","emojiList","setEmojiList","fetchData","_ref2","_asyncToGenerator","response","x","data","error","console","apply","arguments","style","styles","container","children","title","numColumns","keyExtractor","item","index","emojiId","toString","renderItem","_ref3","emojiContainer","emoji","onPress","deviceWidth","Math","round","get","width","deviceHeight","height","create","backgroundColor","borderRadius","shadowColor","shadowRadius","flexDirection","flex","maxWidth","fontFamily","fontWeight","position","left","alignItems","justifyContent","fontSize","marginHorizontal"],"sources":["C:/company/masooda/client/components/EmojiComp.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, Dimensions, FlatList } from 'react-native';\r\nimport { useState, useEffect } from 'react';\r\n//====================================================================\r\nimport {getEmojis} from '../axios/accessServer';\r\n//====================================================================\r\nconst EmojiComp = ({ CallbackFunction, lastEmoji }) => {\r\n    const [currentEmoji, setCurrentEmoji] = useState(lastEmoji);\r\n    const [emojiList, setEmojiList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await getEmojis();\r\n                let x = response.data;\r\n                setEmojiList(x);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {CallbackFunction(currentEmoji)}\r\n            <Text style={styles.title}>Choose a new emoji</Text>\r\n\r\n\r\n            \r\n            <FlatList\r\n                data={emojiList}\r\n                numColumns={8} // מספר העמודות בכל שורה\r\n                keyExtractor={(item, index) => item.emojiId.toString()}\r\n                renderItem={({ item }) => (\r\n                    <View style={styles.emojiContainer}>\r\n                        <Text\r\n                            style={styles.emoji}\r\n                            onPress={() => {\r\n                                setCurrentEmoji(item.emoji);\r\n                            }}>\r\n                            {item.emoji}\r\n                        </Text>\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst deviceHeight = Math.round(Dimensions.get('window').height);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        width: deviceWidth,\r\n        borderRadius: 15,\r\n        shadowColor: '#0000009D',\r\n        shadowRadius: 30,\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        maxWidth: 600,\r\n    },\r\n    title: {\r\n        fontFamily: 'GeneralSans-Semibold',\r\n        fontWeight: 'bold',\r\n        position: 'relative',\r\n        width: deviceWidth,\r\n        left: deviceWidth / 4,\r\n    },\r\n    emojiContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    emoji: {\r\n        fontSize: 20,\r\n        marginHorizontal: 10,\r\n    },\r\n});\r\n\r\nexport default EmojiComp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}