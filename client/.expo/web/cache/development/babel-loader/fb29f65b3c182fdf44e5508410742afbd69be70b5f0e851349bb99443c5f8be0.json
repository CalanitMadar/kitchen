{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"route\"];\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport seafoodFreezer from \"../JSON/seafoodFreezerProduct.json\";\nimport meetFreezer from \"../JSON/meetFreezerProducts.json\";\nimport vegetableFridge from \"../JSON/vegetableFridgeProducts.json\";\nimport chickenFridge from \"../JSON/chickenFridgeProducts.json\";\nimport pastaCabinet from \"../JSON/pastaCabinetProducts.json\";\nimport Inventory from \"../JSON/inventory.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar backgroundColorCard = function backgroundColorCard(card) {\n  var color;\n  var typeFood = card.UnitName;\n  console.log(typeFood);\n  var json;\n  if (typeFood === 'Seafood Freezer') {\n    json = seafoodFreezer;\n  } else if (typeFood === 'Meat Freezer') {\n    json = meetFreezer;\n  } else if (typeFood === 'Vegetable Fridge') {\n    json = vegetableFridge;\n  } else if (typeFood === 'Chicken Fridge') {\n    json = chickenFridge;\n  } else if (typeFood === 'Pasta Cabinet') {\n    json = pastaCabinet;\n  }\n  var sumMax = 0;\n  var sumMin = 0;\n  for (var i = 0; i < json.products.length; i++) {\n    var weight = json.products[i].weight;\n    var min = weight.split(\"/\", 1);\n    var max = weight.slice(weight.indexOf('/') + 1, weight.lastIndexOf(' '));\n    max = parseInt(max);\n    min = parseInt(min);\n    sumMax += max;\n    sumMin += min;\n  }\n  var percent = sumMin / sumMax * 100;\n  for (var _i = 0; _i < Inventory.data.length; _i++) {\n    if (Inventory.data[_i].title1 === typeFood) {\n      Inventory.data[_i].inventoryLevelPercent = percent;\n    }\n  }\n  if (percent <= 30) {\n    color = '#C41C21';\n  }\n  if (percent > 30 && percent <= 70) {\n    color = '#EF9300';\n  }\n  if (percent > 70) {\n    color = '#28AA29';\n  }\n  return color;\n};\nvar checkGoComponent = function checkGoComponent(percent, unit) {\n  var component;\n  if (percent <= 30) {\n    component = \"StorageUnitLowStock\";\n  } else if (percent > 30 && percent <= 70) {\n    component = \"StorageUnitLimitedStock\";\n  } else if (percent > 70) {\n    component = \"StorageUnitSufficientStock\";\n  }\n  return component;\n};\nvar radiusCard = function radiusCard(percent) {\n  var radius = 0;\n  if (percent >= 98) {\n    radius = 30;\n  }\n  return radius;\n};\nvar InventoryCard = function InventoryCard(_ref) {\n  var route = _ref.route,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var navigation = useNavigation();\n  return _jsx(View, {\n    style: [styles.cardContainer],\n    children: \"ppppppppppppppppppppppppppppppppppppppppppp\"\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: '#FFFFFF',\n    width: deviceWidth - 30,\n    height: 90,\n    borderRadius: 30,\n    shadowColor: '#00000029',\n    shadowRadius: 30,\n    flexDirection: 'row',\n    top: '30%'\n  },\n  color: {\n    opacity: 0.26,\n    borderTopLeftRadius: 30,\n    borderBottomLeftRadius: 30\n  },\n  imageStyle: {\n    position: 'absolute',\n    left: '8%',\n    top: '25%',\n    flex: 1,\n    fontSize: 38\n  },\n  textStyle: {\n    flex: 2,\n    position: 'absolute',\n    left: '30%',\n    top: '20%'\n  },\n  textStyle1: {\n    fontFamily: 'GeneralSans',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  textStyle2: {\n    fontFamily: 'GeneralSans-Semibold',\n    fontSize: 14,\n    color: '#A2142C',\n    fontWeight: 'bold'\n  },\n  textStyle3: {\n    fontFamily: 'GeneralSans-Medium',\n    fontSize: 11,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  iconStyle: {\n    flex: 3,\n    position: 'absolute',\n    left: '90%',\n    top: '30%'\n  }\n});\nexport default InventoryCard;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Dimensions","Image","AntDesign","useNavigation","seafoodFreezer","meetFreezer","vegetableFridge","chickenFridge","pastaCabinet","Inventory","jsx","_jsx","backgroundColorCard","card","color","typeFood","UnitName","console","log","json","sumMax","sumMin","i","products","length","weight","min","split","max","slice","indexOf","lastIndexOf","parseInt","percent","data","title1","inventoryLevelPercent","checkGoComponent","unit","component","radiusCard","radius","InventoryCard","_ref","route","props","_objectWithoutProperties","_excluded","navigation","style","styles","cardContainer","children","deviceWidth","Math","round","get","width","create","backgroundColor","height","borderRadius","shadowColor","shadowRadius","flexDirection","top","opacity","borderTopLeftRadius","borderBottomLeftRadius","imageStyle","position","left","flex","fontSize","textStyle","textStyle1","fontFamily","fontWeight","textStyle2","textStyle3","iconStyle"],"sources":["C:/company/masooda/client/components/InventoryCard.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text ,Dimensions, Image} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n//-------------------------------------------\r\nimport seafoodFreezer from '../JSON/seafoodFreezerProduct.json';\r\nimport meetFreezer from '../JSON/meetFreezerProducts.json';\r\nimport vegetableFridge from '../JSON/vegetableFridgeProducts.json';\r\nimport chickenFridge from '../JSON/chickenFridgeProducts.json';\r\nimport pastaCabinet from '../JSON/pastaCabinetProducts.json';\r\nimport Inventory from '../JSON/inventory.json'\r\n//================================================\r\nvar backgroundColorCard = function (card) {\r\n    let color;\r\n    //inventoryLevelPercent\r\n    let typeFood = card.UnitName;\r\n    console.log(typeFood);\r\n    let json;\r\n    if (typeFood === 'Seafood Freezer') {\r\n        json = seafoodFreezer;\r\n    }\r\n\r\n    else if (typeFood === 'Meat Freezer') {\r\n        json = meetFreezer;\r\n    }\r\n\r\n    else if (typeFood === 'Vegetable Fridge') {\r\n        json = vegetableFridge;\r\n    }\r\n\r\n    else if (typeFood === 'Chicken Fridge') {\r\n        json = chickenFridge;\r\n    }\r\n\r\n    else if (typeFood === 'Pasta Cabinet') {\r\n        json = pastaCabinet;\r\n    }///////////////////////////////////\r\n    let sumMax = 0;\r\n    let sumMin = 0;\r\n    for (let i = 0; i < json.products.length; i++)\r\n    {\r\n        let weight = json.products[i].weight;\r\n        let min = weight.split(\"/\", 1);\r\n\r\n        let max = weight.slice(weight.indexOf('/') + 1, weight.lastIndexOf(' '));\r\n        max = parseInt(max);\r\n        min = parseInt(min);\r\n        sumMax += max;\r\n        sumMin += min;\r\n    }\r\n\r\n\r\n    let percent = sumMin / sumMax * 100;\r\n\r\n\r\n    for (let i = 0; i < Inventory.data.length; i++) \r\n    {\r\n        if (Inventory.data[i].title1 === typeFood)\r\n        {\r\n            Inventory.data[i].inventoryLevelPercent = percent;\r\n        }\r\n    }\r\n\r\n    if (percent <= 30) {\r\n        color = '#C41C21';\r\n    }\r\n    if (percent > 30 && percent <= 70) {\r\n        color = '#EF9300';\r\n    }\r\n    if (percent > 70) {\r\n        color = '#28AA29';\r\n    }\r\n\r\n    return color;\r\n}\r\n\r\n//================================================\r\n//A function that returns the component to which we will need to render\r\nvar checkGoComponent = function (percent, unit) {\r\n    let component;\r\n    \r\n    if (percent <= 30) {\r\n        component = \"StorageUnitLowStock\";//מלאי נמוך\r\n    }\r\n    else if (percent > 30 && percent <= 70) {\r\n        component = \"StorageUnitLimitedStock\";//מלאי מוגבל\r\n    }\r\n    else if (percent > 70) {\r\n        component = \"StorageUnitSufficientStock\";//מלאי מספיק\r\n    }\r\n    return component;\r\n}\r\n//=================================================\r\nconst radiusCard = (percent) =>{\r\n    let radius = 0;\r\n    if(percent >= 98)\r\n    {\r\n        radius = 30\r\n    }\r\n    return radius;\r\n}\r\n//================================================\r\nconst InventoryCard = ({ route, ...props })  =>{\r\n    const navigation = useNavigation();\r\n\r\n    return(\r\n        <View style={[styles.cardContainer]} >\r\n            ppppppppppppppppppppppppppppppppppppppppppp\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        backgroundColor: '#FFFFFF',\r\n        width: deviceWidth - 30,\r\n        height: 90,\r\n        borderRadius: 30,\r\n        shadowColor: '#00000029',\r\n        shadowRadius: 30,\r\n        flexDirection: 'row',\r\n        top: '30%',\r\n    },\r\n    color:{\r\n        opacity: 0.26,\r\n        borderTopLeftRadius:30,\r\n        borderBottomLeftRadius: 30,\r\n        //borderRadius: 30,\r\n\r\n\r\n    },\r\n    imageStyle:{\r\n        position: 'absolute',\r\n        left: '8%',\r\n        top: '25%',\r\n        flex: 1,\r\n        fontSize:38\r\n    },\r\n    textStyle:{\r\n        flex: 2,\r\n        position: 'absolute',\r\n        left: '30%',\r\n        top: '20%'\r\n    },\r\n    textStyle1:{\r\n        fontFamily: 'GeneralSans',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n    },\r\n    textStyle2: {\r\n        fontFamily: 'GeneralSans-Semibold',\r\n        fontSize: 14,\r\n        color: '#A2142C',\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    textStyle3: {\r\n        fontFamily: 'GeneralSans-Medium',\r\n        fontSize: 11,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n\r\n    },\r\n    iconStyle:{\r\n        flex: 3,\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '30%'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default InventoryCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}