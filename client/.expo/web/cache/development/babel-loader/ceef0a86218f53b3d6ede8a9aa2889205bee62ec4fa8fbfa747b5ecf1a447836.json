{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useState, useEffect } from 'react';\nimport Emoji from 'react-native-emoji';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EmojiComp = function EmojiComp(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.all,\n      children: [_jsx(Emoji, {\n        name: \"coffee\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"tea\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"banana\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"apple\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      }), _jsx(Emoji, {\n        name: \"grapes\",\n        style: styles.emoji\n      })]\n    })\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar deviceHeight = Math.round(Dimensions.get('window').height);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFFFFF',\n    width: deviceWidth - 100,\n    borderRadius: 30,\n    shadowColor: '#00000029',\n    shadowRadius: 30,\n    flexDirection: 'row'\n  },\n  all: {\n    flexDirection: 'row',\n    marginHorizontal: 10\n  },\n  emoji: {\n    fontSize: 20,\n    marginHorizontal: 5\n  }\n});\nexport default EmojiComp;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Image","Dimensions","useState","useEffect","Emoji","jsx","_jsx","jsxs","_jsxs","EmojiComp","_ref","navigation","style","styles","container","children","all","name","emoji","deviceWidth","Math","round","get","width","deviceHeight","height","create","backgroundColor","borderRadius","shadowColor","shadowRadius","flexDirection","marginHorizontal","fontSize"],"sources":["C:/company/masooda/myproject/components/EmojiComp.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text, Image, Dimensions } from 'react-native';\r\nimport { useState, useEffect } from 'react';\r\nimport Emoji from 'react-native-emoji';\r\n\r\n//====================================================================\r\n//====================================================================\r\nconst EmojiComp = ({navigation}) => {\r\n\r\n\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <View style={styles.all}>\r\n                <Emoji name=\"coffee\" style={styles.emoji} />\r\n                <Emoji name=\"tea\" style={styles.emoji} />\r\n                <Emoji name=\"banana\" style={styles.emoji} />\r\n                <Emoji name=\"apple\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n                <Emoji name=\"grapes\" style={styles.emoji} />\r\n            </View>\r\n\r\n            \r\n        </View>\r\n    );\r\n}\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst deviceHeight = Math.round(Dimensions.get('window').height);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        width: deviceWidth - 100,\r\n        borderRadius: 30,\r\n        shadowColor: '#00000029',\r\n        shadowRadius: 30,\r\n        flexDirection:'row', \r\n    },\r\n    all:{\r\n        flexDirection:'row', \r\n        marginHorizontal: 10\r\n    },\r\n    emoji:{\r\n        fontSize: 20,\r\n        marginHorizontal: 5,\r\n        \r\n    }\r\n});\r\n\r\nexport default EmojiComp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}