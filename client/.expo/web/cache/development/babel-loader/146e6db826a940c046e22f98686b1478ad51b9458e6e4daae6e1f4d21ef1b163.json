{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"route\"];\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport seafoodFreezer from \"../JSON/seafoodFreezerProduct.json\";\nimport meetFreezer from \"../JSON/meetFreezerProducts.json\";\nimport vegetableFridge from \"../JSON/vegetableFridgeProducts.json\";\nimport chickenFridge from \"../JSON/chickenFridgeProducts.json\";\nimport pastaCabinet from \"../JSON/pastaCabinetProducts.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backgroundColorCard = function backgroundColorCard(card) {\n  var color;\n  var typeFood = card.title1;\n  var json;\n  if (typeFood === 'Seafood Freezer') {\n    json = seafoodFreezer;\n  } else if (typeFood === 'Meat Freezer') {\n    json = meetFreezer;\n  } else if (typeFood === 'Vegetable Fridge') {\n    json = vegetableFridge;\n  } else if (typeFood === 'Chicken Fridge') {\n    json = chickenFridge;\n  } else if (typeFood === 'Pasta Cabinet') {\n    json = pastaCabinet;\n  }\n  for (var i = 0; i < json.length; i++) {\n    var min = void 0;\n    var max = void 0;\n  }\n  if (percentColor <= 30) {\n    color = '#C41C21';\n  }\n  if (percentColor > 30 && percentColor <= 70) {\n    color = '#EF9300';\n  }\n  if (percentColor > 70) {\n    color = '#28AA29';\n  }\n  return color;\n};\nvar checkGoComponent = function checkGoComponent(percent, unit) {\n  var component;\n  if (percent <= 30) {\n    component = \"StorageUnitLowStock\";\n  } else if (percent > 30 && percent <= 70) {\n    component = \"StorageUnitLimitedStock\";\n  } else if (percent > 70) {\n    component = \"StorageUnitSufficientStock\";\n  }\n  return component;\n};\nvar InventoryCard = function InventoryCard(_ref) {\n  var route = _ref.route,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.cardContainer,\n    children: [_jsx(View, {\n      style: [styles.color, {\n        backgroundColor: backgroundColorCard(props.card)\n      }, {\n        width: props.card.inventoryLevelPercent + '%'\n      }]\n    }), _jsx(Text, {\n      style: styles.imageStyle,\n      children: props.card.emoji\n    }), _jsxs(View, {\n      style: styles.textStyle,\n      children: [_jsx(Text, {\n        style: styles.textStyle1,\n        children: props.card.title1\n      }), _jsx(Text, {\n        style: styles.textStyle2,\n        children: props.card.title2\n      }), _jsx(Text, {\n        style: styles.textStyle3,\n        children: props.card.title3\n      })]\n    }), _jsx(AntDesign, {\n      style: styles.iconStyle,\n      name: \"arrowright\",\n      size: 24,\n      color: \"black\",\n      onPress: function onPress() {\n        return navigation.navigate(checkGoComponent(props.card.inventoryLevelPercent, props.card.unit), {\n          typeFood: props.card.title1,\n          unit: props.card.unit,\n          temperature: props.card.temperature\n        });\n      }\n    })]\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: '#FFFFFF',\n    width: deviceWidth - 30,\n    height: 90,\n    borderRadius: 30,\n    shadowColor: '#00000029',\n    shadowRadius: 30,\n    flexDirection: 'row',\n    top: '30%'\n  },\n  color: {\n    opacity: 0.26,\n    borderTopLeftRadius: 30,\n    borderBottomLeftRadius: 30\n  },\n  imageStyle: {\n    position: 'absolute',\n    left: '8%',\n    top: '25%',\n    flex: 1,\n    fontSize: 38\n  },\n  textStyle: {\n    flex: 2,\n    position: 'absolute',\n    left: '30%',\n    top: '20%'\n  },\n  textStyle1: {\n    fontFamily: 'GeneralSans',\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  textStyle2: {\n    fontFamily: 'GeneralSans-Semibold',\n    fontSize: 14,\n    color: '#A2142C',\n    fontWeight: 'bold'\n  },\n  textStyle3: {\n    fontFamily: 'GeneralSans-Medium',\n    fontSize: 11,\n    fontWeight: 'bold',\n    color: '#000000'\n  },\n  iconStyle: {\n    flex: 3,\n    position: 'absolute',\n    left: '90%',\n    top: '30%'\n  }\n});\nexport default InventoryCard;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Dimensions","Image","AntDesign","useNavigation","seafoodFreezer","meetFreezer","vegetableFridge","chickenFridge","pastaCabinet","jsx","_jsx","jsxs","_jsxs","backgroundColorCard","card","color","typeFood","title1","json","i","length","min","max","percentColor","checkGoComponent","percent","unit","component","InventoryCard","_ref","route","props","_objectWithoutProperties","_excluded","navigation","style","styles","cardContainer","children","backgroundColor","width","inventoryLevelPercent","imageStyle","emoji","textStyle","textStyle1","textStyle2","title2","textStyle3","title3","iconStyle","name","size","onPress","navigate","temperature","deviceWidth","Math","round","get","create","height","borderRadius","shadowColor","shadowRadius","flexDirection","top","opacity","borderTopLeftRadius","borderBottomLeftRadius","position","left","flex","fontSize","fontFamily","fontWeight"],"sources":["C:/company/masooda/myproject/components/InventoryCard.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text ,Dimensions, Image} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n//-------------------------------------------\r\nimport seafoodFreezer from '../JSON/seafoodFreezerProduct.json';\r\nimport meetFreezer from '../JSON/meetFreezerProducts.json';\r\nimport vegetableFridge from '../JSON/vegetableFridgeProducts.json';\r\nimport chickenFridge from '../JSON/chickenFridgeProducts.json';\r\nimport pastaCabinet from '../JSON/pastaCabinetProducts.json';\r\n\r\n//================================================\r\nvar backgroundColorCard = function (card) {\r\n    let color;\r\n    //inventoryLevelPercent\r\n    let typeFood = card.title1;\r\n    let json;\r\n    if (typeFood === 'Seafood Freezer') {\r\n        json = seafoodFreezer;\r\n    }\r\n\r\n    else if (typeFood === 'Meat Freezer') {\r\n        json = meetFreezer;\r\n    }\r\n\r\n    else if (typeFood === 'Vegetable Fridge') {\r\n        json = vegetableFridge;\r\n    }\r\n\r\n    else if (typeFood === 'Chicken Fridge') {\r\n        json = chickenFridge;\r\n    }\r\n\r\n    else if (typeFood === 'Pasta Cabinet') {\r\n        json = pastaCabinet;\r\n    }///////////////////////////////////\r\n\r\n    for (let i = 0; i< json.length; i++)\r\n    {\r\n        //json.products.weight\r\n        let min;\r\n        let max;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (percentColor <= 30) {\r\n        color = '#C41C21';\r\n    }\r\n    if (percentColor > 30 && percentColor <= 70) {\r\n        color = '#EF9300';\r\n    }\r\n    if (percentColor > 70) {\r\n        color = '#28AA29';\r\n    }\r\n\r\n    return color;\r\n}\r\n\r\n//================================================\r\n//A function that returns the component to which we will need to render\r\nvar checkGoComponent = function (percent, unit) {\r\n    let component;\r\n    \r\n    if (percent <= 30) {\r\n        component = \"StorageUnitLowStock\";//מלאי נמוך\r\n    }\r\n    else if (percent > 30 && percent <= 70) {\r\n        component = \"StorageUnitLimitedStock\";//מלאי מוגבל\r\n    }\r\n    else if (percent > 70) {\r\n        component = \"StorageUnitSufficientStock\";//מלאי מספיק\r\n    }\r\n    return component;\r\n}\r\n//================================================\r\nconst InventoryCard = ({ route, ...props })  =>{\r\n    const navigation = useNavigation();\r\n\r\n    return(\r\n        <View style={styles.cardContainer} >\r\n            <View style={[styles.color, { backgroundColor: backgroundColorCard(props.card) }, { width: props.card.inventoryLevelPercent + '%' }]}></View>\r\n\r\n            <Text style={styles.imageStyle}>{props.card.emoji}</Text>\r\n\r\n            <View style={styles.textStyle}>\r\n                <Text style={styles.textStyle1}>{props.card.title1}</Text>\r\n                <Text style={styles.textStyle2}>{props.card.title2}</Text>\r\n                <Text style={styles.textStyle3}>{props.card.title3}</Text>\r\n            </View>\r\n\r\n            <AntDesign style={styles.iconStyle} name=\"arrowright\" size={24} color=\"black\" \r\n                onPress={() =>\r\n                    navigation.navigate(checkGoComponent(props.card.inventoryLevelPercent, props.card.unit), { typeFood: props.card.title1, unit: props.card.unit, temperature: props.card.temperature })}\r\n            />\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        backgroundColor: '#FFFFFF',\r\n        width: deviceWidth - 30,\r\n        height: 90,\r\n        borderRadius: 30,\r\n        shadowColor: '#00000029',\r\n        shadowRadius: 30,\r\n        flexDirection: 'row',\r\n        top: '30%',\r\n    },\r\n    color:{\r\n        opacity: 0.26,\r\n        borderTopLeftRadius:30,\r\n        borderBottomLeftRadius: 30,\r\n\r\n\r\n    },\r\n    imageStyle:{\r\n        position: 'absolute',\r\n        left: '8%',\r\n        top: '25%',\r\n        flex: 1,\r\n        fontSize:38\r\n    },\r\n    textStyle:{\r\n        flex: 2,\r\n        position: 'absolute',\r\n        left: '30%',\r\n        top: '20%'\r\n    },\r\n    textStyle1:{\r\n        fontFamily: 'GeneralSans',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n    },\r\n    textStyle2: {\r\n        fontFamily: 'GeneralSans-Semibold',\r\n        fontSize: 14,\r\n        color: '#A2142C',\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    textStyle3: {\r\n        fontFamily: 'GeneralSans-Medium',\r\n        fontSize: 11,\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n\r\n    },\r\n    iconStyle:{\r\n        flex: 3,\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '30%'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default InventoryCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}