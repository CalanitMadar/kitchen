{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Card from \"./InventoryCard\";\nimport { Picker } from '@react-native-picker/picker';\nimport { useState, useEffect } from 'react';\nimport { getInventory } from \"../axios/accessServer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Inventory = function Inventory(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedValue = _useState2[0],\n    setSelectedValue = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cards = _useState4[0],\n    setCards = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    idUser = _useState6[0],\n    setIdUser = _useState6[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield getInventory();\n          var x = response.data;\n          setCards(x);\n          setIdUser(x[0].IDUser);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [cards]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.titleAndPicker,\n      children: [_jsx(Text, {\n        style: styles.titleStile,\n        children: \"Manage Inventory \"\n      }), _jsxs(Picker, {\n        selectedValue: selectedValue,\n        style: styles.pickerStyle,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedValue(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Sort by Name\",\n          value: \"1\"\n        }), _jsx(Picker.Item, {\n          label: \"Stock Level\",\n          value: \"2\"\n        }), _jsx(Picker.Item, {\n          label: \"Type\",\n          value: \"3\"\n        })]\n      })]\n    }), cards.map(function (card, key) {\n      return _jsxs(View, {\n        children: [_jsx(Card, {\n          card: card\n        }), key === cards.length - 1 && _jsx(View, {\n          style: styles.buttonStyle,\n          children: _jsx(Button, {\n            color: \"#C3001F\",\n            onPress: function onPress() {\n              return navigation.navigate('AddStorageUnit', {\n                idUser: idUser\n              });\n            },\n            title: \"+ Add Storage Unit\"\n          })\n        })]\n      }, card.Inventoryid);\n    })]\n  });\n};\nvar deviceWidth = Math.round(Dimensions.get('window').width);\nvar deviceHeight = Math.round(Dimensions.get('window').height);\nvar styles = StyleSheet.create({\n  container: {\n    height: deviceHeight,\n    alignItems: 'center',\n    gap: 8,\n    backgroundColor: '#FFFFFF',\n    flex: 1\n  },\n  titleAndPicker: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '90%',\n    top: '3%'\n  },\n  titleStile: {\n    fontFamily: 'GeneralSans-Semibold',\n    fontSize: 17,\n    fontWeight: 'bold'\n  },\n  pickerStyle: {\n    borderRadius: 10,\n    shadowColor: '#00000022',\n    borderWidth: 0,\n    overflow: \"hidden\",\n    shadowRadius: 11,\n    fontWeight: 'bold',\n    fontFamily: 'GeneralSans-Bold'\n  },\n  buttonStyle: {\n    fontFamily: 'GeneralSans',\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: deviceHeight - 100,\n    width: \"80%\",\n    borderRadius: 15,\n    backgroundColor: '#C3001F',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 10,\n    marginHorizontal: 20\n  }\n});\nexport default Inventory;","map":{"version":3,"names":["React","StyleSheet","View","Button","Text","Image","Dimensions","Card","Picker","useState","useEffect","getInventory","jsx","_jsx","jsxs","_jsxs","Inventory","_ref","navigation","_useState","_useState2","_slicedToArray","selectedValue","setSelectedValue","_useState3","_useState4","cards","setCards","_useState5","_useState6","idUser","setIdUser","fetchData","_ref2","_asyncToGenerator","response","x","data","IDUser","error","console","apply","arguments","style","styles","container","children","titleAndPicker","titleStile","pickerStyle","onValueChange","itemValue","itemIndex","Item","label","value","map","card","key","length","buttonStyle","color","onPress","navigate","title","Inventoryid","deviceWidth","Math","round","get","width","deviceHeight","height","create","alignItems","gap","backgroundColor","flex","flexDirection","justifyContent","top","fontFamily","fontSize","fontWeight","borderRadius","shadowColor","borderWidth","overflow","shadowRadius","position","marginVertical","marginHorizontal"],"sources":["C:/company/masooda/client/components/Inventory.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, Text, Image, Dimensions } from 'react-native';\r\nimport Card from './InventoryCard';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useState, useEffect } from 'react';\r\nimport {getInventory} from '../axios/accessServer';//Calling a function from another file\r\n//====================================================================\r\n\r\n//====================================================================\r\nconst Inventory = ({navigation}) => {\r\n    const [selectedValue, setSelectedValue] = useState(1);\r\n    const [cards, setCards] = useState([]);\r\n    const [idUser, setIdUser] = useState(0);\r\n\r\n\r\n    /*useEffect(() => {\r\n        //console.log('calanit');\r\n        //console.log(selectedValue);\r\n        if (selectedValue === 1)\r\n        {\r\n            \r\n        }\r\n        if (selectedValue === 2) {\r\n\r\n        }\r\n        if (selectedValue === 3) {\r\n\r\n        }\r\n    },[selectedValue]);*/\r\n    //====================\r\n\r\n\r\n    useEffect(() => \r\n    {\r\n        const fetchData = async () => {\r\n          try {\r\n            const response = await getInventory();\r\n            let x = response.data;\r\n            //console.log(x.length);\r\n            setCards(x);\r\n            setIdUser(x[0].IDUser);\r\n                        \r\n          } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    fetchData();\r\n}, [cards]);\r\n   \r\n     \r\n    return(\r\n\r\n        <View style={styles.container}>\r\n\r\n            <View style={styles.titleAndPicker}>\r\n                <Text style={styles.titleStile}>Manage Inventory </Text>\r\n\r\n                <Picker \r\n                    selectedValue={selectedValue} style={styles.pickerStyle}\r\n                    onValueChange={(itemValue, itemIndex) =>\r\n                        setSelectedValue(itemValue)\r\n                        }>\r\n                    \r\n                    <Picker.Item label=\"Sort by Name\" value=\"1\" />\r\n                    <Picker.Item label=\"Stock Level\" value=\"2\" />\r\n                    <Picker.Item label=\"Type\" value=\"3\" />\r\n                </Picker>\r\n                \r\n            </View>\r\n            \r\n            {cards.map((card, key) => {\r\n                return (\r\n                    <View  key={card.Inventoryid} >\r\n                        <Card  card={card}/>\r\n\r\n                        {key === cards.length - 1 && (\r\n                <View style={styles.buttonStyle}>\r\n                    <Button\r\n                    color=\"#C3001F\"\r\n                    onPress={() =>\r\n                    navigation.navigate('AddStorageUnit', { idUser: idUser })\r\n                }\r\n                title=\"+ Add Storage Unit\"\r\n                />\r\n                </View>\r\n                )}\r\n\r\n                    </View>\r\n                );\r\n            })}\r\n\r\n\r\n            \r\n           \r\n\r\n\r\n           \r\n\r\n\r\n            \r\n        </View>\r\n    );\r\n}\r\nconst deviceWidth = Math.round(Dimensions.get('window').width);\r\nconst deviceHeight = Math.round(Dimensions.get('window').height);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: deviceHeight,\r\n        alignItems: 'center',\r\n        gap: 8, // ערך המרווח בין הכרטיסיות\r\n        backgroundColor: '#FFFFFF',\r\n        flex: 1,\r\n    },\r\n    titleAndPicker:{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width:'90%',\r\n        top: '3%',\r\n    },\r\n    titleStile:{\r\n        fontFamily: 'GeneralSans-Semibold',\r\n        fontSize:17,\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    pickerStyle:{\r\n        borderRadius: 10,\r\n        shadowColor: '#00000022',\r\n        borderWidth: 0, \r\n        overflow: \"hidden\", \r\n        shadowRadius: 11,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'GeneralSans-Bold',\r\n\r\n    },\r\n   /* card:{\r\n        width: '92%',\r\n        maxWidth: '92%',\r\n        alignItems: 'center'\r\n    },*/\r\n    buttonStyle: {\r\n        \r\n        fontFamily: 'GeneralSans',\r\n        fontWeight: 'bold',\r\n        position: 'absolute',\r\n        top: deviceHeight-100,\r\n        width: \"80%\",\r\n        borderRadius: 15,\r\n        \r\n        backgroundColor: '#C3001F',\r\n        borderRadius: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginVertical: 10, \r\n        marginHorizontal: 20\r\n    }\r\n});\r\n\r\nexport default Inventory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}